data1
data1.csv
#연습문제
apply(data1)
#연습문제
apply(data1.csv)
#연습문제
data1
#연습문제
data1 <- loadWorkbook("data1.csv", create = T)
#연습문제
library(XLConnect)
data1 <- loadWorkbook("data1.csv", create = T)
data1 <- loadWorkbook("data1.csv")
#연습문제
data1 <- data1.csv
#연습문제
data1
#연습문제
data1 <- read.csv('data1.csv')
data1
tapply(X,Year,sum)
tapply('X',Year,sum)
tapply(2000,Year,sum)
tapply('연도별',Year,sum)
tapply(B1:O1,Year,sum)
apply(data1[,c(2:15)], 2, sum)
apply(data1[,-1], 1, sum)
data2 <- read.csv('1-4호선승하차승객수.csv')
data2
attach(data2)
tapply(승차, 노선번호, sum)
tapply(하차, 노선번호, sum)
sapply(data2[,c(3,4)], sum)
aggregate(승차~노선번호, data2, sum)
aggregate(하차~노선번호, data2, sum)
aggregate(승차+하차~노선번호, data2, sum)
mat1 <- matrix(c(1:6), nrow = 2, byrow = T)
a <- rep(1, 3)
sweep(mat1, 2, a)
b <- matrix(c(2, 2))
sweep(mat1, 1, b)
b
a <- c(1,2,3,4,5); length(a)
length(mat1)
library(googleVis)
length(Fruits)
log(10)
log10(10)
sin(pi)
abs(-1)
v2 <- c(1,-2,3,-4)
abs(v2)
ceiling(2,3)
ceiling(2.3)
floor(2.3)
ceiling(-2.3)
floor(-2.3)
round(2.5)
round(2.51)
?round
choose(5, 3)
myfunc <- function() {
return(10)
}
myfunc()
myfunc2 <- function(x) {
y = x * x;
return(y)
}
myfunc2(-3)
#연습문제
exfunc1 <- function(a, b) {
result <- a - b
return(result)
}
exfunc1(3, 5)
exfunc1(56, 34)
exfunc2 <- function(a, b) {
result <- abs(exfunc1(a, b))
return(result)
}
exfunc2(123, 456)
??exfunc
??exfunc1
??exfunc
??exfunction
?exfunction
??exfunction
??function
result <- x - y
func_test1 <-function(x, y) {
result <- x - y
return(result)
}
func_test1(3,2)
func-test1(2,3)
func_test1(2,3)
func_test1 <- function(x, y) {
result <- abs(func_test1(x, y))
return(result)
}
func_test1(2, 3)
func_test1(2, 3)
func_test2 <- function(x, y) {
result <- abs(func_test1(x, y))
return(result)
}
func_test1(2, 3)
func_test1(3, 2)
func_test1(12, 13)
func_test1(13, 12)
exfunc1(2, 3)
exfunc2 <- function(a, b) {
result <- abs(exfunc1(a, b))
return(result)
}
exfunc2(2, 3)
library(googleVis)
sort1 <- Fruits$Sales
sort1
sort(sort1)
sort(sort1, decreasing = T)
install.packages("plyr")
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
fruits
ddply(fruits, 'name', summarise, sum_qty=sum(qty), sum_price=sum(price))
ddply(fruits, 'name', summarise, max_qty=max(qty), min_price=min(price))
ddply(fruits, c('year', 'name'), summarise, max_qty=max(qty), min_price=min(price))
ddply(fruits, 'name', transform, sum_qty=sum(qty), pct_qty=(100*qty)/sum(qty))
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
data1 <- read.csv("2013년_프로야구선수_성적.csv")
data1
filter(data1, 경기 > 120)
filter(data1, 경기 > 120 & 득점 > 80)
filter(data1, 포지션=="1루수" | 포지션=='3루수')
filter(data1, 포지션 %in% c('1루수', '3루수'))
select(data1, 선수명, 포지션, 팀)
select(data1, 순위:타수)
select(data1, -홈런, -타점, -도루)
select(data1, -홈런:-도루)
data1 %>%
data1 %>%
select(선수명, 팀, 경기, 타수) %>%
filter(타수 > 400)
data1 %>%
select(선수명, 팀, 경기, 타수) %>%
filter(타수 > 400)
data1 %>%
select(선수명, 팀, 경기, 타수) %>%
filter(타수 > 400) %>%
arrange(타수)
data1 %>%
select(선수명, 팀, 경기, 타수) %>%
filter(타수 > 400) %>%
arrange(desc(타수))
data1 %>%
select(선수명, 팀, 경기, 타수) %>%
filter(타수 > 400) %>%
arrange(desc(경기))
data1 %>%
select(선수명, 팀, 경기, 타수) %>%
filter(타수 > 400) %>%
arrange(desc(경기), desc(타수))
data1 %>%
select(선수명, 팀,경기, 타수) %>%
mutate(경기x타수 = 경기*타수) %>%
arrange(경기x타수)
data1 %>%
select(선수명, 팀, 출루율, 장타율) %>%
mutate(OPS = 출루율 + 장타율) %>%
arrange(desc(OPS))
data2
data1 %<%
group_by(팀) %>%
summarise(average = mean(경기, na.rm = T))
data1 %>%
group_by(팀) %>%
summarise(average = mean(경기, na.rm = T))
data1 %>%
group_by(팀) %>%
summarise_each(funs(mean), 경기, 타수, 타율)
data1 %>%
group_by(팀) %>%
summarise_each(list(mean), 경기, 타수, 타율)
data1 %>%
group_by(팀) %>%
summarise_each(funs(mean, n()), 경기, 타수)
# 연습문제
attach(Fruits)
Fruits
Fruits %>%
filter(Expenses > 80)
Fruits %>%
filter(Fruits_2, Expenses > 80)
Fruits %>%
filter(Fruits2, Expenses > 80)
Fruits %>%
filter(Fruits, Expenses > 90 & Sales > 90)
Fruits %>%
filter(Expenses > 90 & Sales > 90)
Fruits %>%
filter(Expenses > 90 | Sales > 80)
Fruits %>%
filter(Expenses %in% c(79, 91))
Fruits %>%
select(Fruit:Sales, -Location)
install.packages("ggplot2")
library(ggplot2)
mpg
View(mpg)
filter(data1, displ %in% c(< 4, >5))
filter(data1, displ =< 4 | displ => 5))
filter(displ =< 4 | displ => 5))
data1 <- read.csv("mpg.csv")
library(ggplot2)
mpg
filter(mpg, displ < 4 | displ > 5)
summarise(list(mean), hwy)
summarise(funs(mean), hwy)
data1 <- filter(mpg, displ < 4 | displ > 5)
data1
data1 %>%
summarise_each(funs(mean), hwy)
mpg
#문제 3
select(mpg, chevrolet, ford, honda)
#문제 3
select(mpg, 'chevrolet', 'ford', 'honda')
#문제 3
select(mpg, "chevrolet", "ford", "honda")
mpg
#문제 3
data3 <- filter(mpg, 'cheverlet','ford','honda')
#문제 3
data3 <- filter(mpg, cheverlet, ford, honda)
mpg
#문제 3
data3 <- filter(mpg, manufacturer %in% c('cheverlet', 'ford', 'honda'))
data3
data3 %>%
group_by(manufacturer) %>%
summarise(avarage = mean(hwy, na.rm = TRUE))
mpg
#문제 3
data3 <- filter(mpg, manufacturer %in% c('cheverolet', 'ford', 'honda'))
#문제 3
data3 <- filter(mpg, manufacturer %in% c('cheverolet', 'ford', 'honda'))
data3 %>%
group_by(manufacturer) %>%
summarise(avarage = mean(hwy, na.rm = TRUE))
mpg
#문제 3
data3 <- filter(mpg, manufacturer %in% c('cheverolet', 'ford', 'honda'))
data3 %>%
data3
mpg
#문제 3
data3 <- filter(mpg, manufacturer %in% c('cheverolet', 'ford', 'honda'))
data3
mpg
#문제 3
data3 <- filter(mpg, manufacturer %in% c('chevrolet', 'ford', 'honda'))
data3
data3 %>%
group_by(manufacturer) %>%
summarise(avarage = mean(hwy, na.rm = TRUE))
#문제 4
select(mpg, class, cty)
#문제 5
data5 <- select(mpg, class, cty)
data5 %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE))
data5 %>%
data5
#문제 5
data5 <- select(mpg, class, cty), filter(class %in% c('compact', 'suv'))
#문제 5
data5 <- select(mpg, filter(class %in% c('compact', 'suv')), cty), filter(class %in% c('compact', 'suv'))
#문제 5
data5 <- select(mpg, class, cty)
data5 %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE)) %>%
data5 %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE)) %>%
#문제 5
data5 <- select(mpg, class, cty)
#문제 5
data5 <- select(mpg, class, cty)
data5
filter(class %in% c('compact', 'suv')
filter(class %in% c('compact', 'suv')
data5 %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE)) %>%
data5 %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE))
#문제 5
data5 <- select(mpg, class, cty)
data5
data5 %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE))
data5 %>%
filter(class %in% c(suv, compact))
data5 %>%
filter(class %in% c('suv', 'compact'))
data5 <-filter(class %in% c('suv', 'compact'))
data5 %>%
filter(class %in% c('suv', 'compact'))
data5 %>%
filter(class %in% c('suv', 'compact')) %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE))
#문제 6
data6 <- filter(mpg, manufacturer =='audi')
data6
data6
data6 %>%
select (audi, hwy) %>%
filter(head(5)) %>%
arrange(desc(hwy))
data6 %>%
select (manufacturer, hwy) %>%
filter(head(5)) %>%
arrange(desc(hwy))
data6 %>%
select (manufacturer, hwy) %>%
arrange(desc(hwy))
data6 %>%
select (manufacturer, hwy) %>%
arrange(desc(hwy)) %>%
head(5)
data6 %>%
arrange(desc(hwy)) %>%
head(5)
data6 %>%
arrange(desc(hwy)) %>%
head(5)
library(ggplot2)
library(ggplot2)
mpg
View(mpg)
mean(mpg4$hwy); mean(mpg5$hwy)
#1
mpg4 <- filter(mpg, displ =< 4)
#1
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
library(ggplot2)
mpg
View(mpg)
#문제 3
data3 <- filter(mpg, manufacturer %in% c('chevrolet', 'ford', 'honda'))
data3 %>%
group_by(manufacturer) %>%
summarise(avarage = mean(hwy, na.rm = TRUE))
#문제 4
select(mpg, class, cty)
#문제 5
data5 <- select(mpg, class, cty)
data5 %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE))
data5 %>%
filter(class %in% c('suv', 'compact')) %>%
group_by(class) %>%
summarise(avarage = mean(cty, na.rm = TRUE))
#문제 6
data6 <- filter(mpg, manufacturer =='audi')
data6 %>%
arrange(desc(hwy)) %>%
head(5)
install.packages("reshape2")
library(reshape2)
fruits
melt(fruits, id = 'year')
melt(fruits, id = c('year', 'name'))
melt(fruits, id = c('year', 'name'), variable.name = '변수명', value.name = '변수값')
mtest <- melt(fruits, id = c('year', 'name'), variable.name = '변수명', value.name = '변수값')
dcast(mtest, year + name ~ 변수명)
dcast(mtest, name ~ 변수명, sum)
dcast(mtest, name ~ 변수명, sum, subset = . (name=='apple'))
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
library(stringr)
fruits <- c('apple', 'Apple', 'banana', 'pineapple')
str_detect(fruits, 'A')
str_detect(fruits, 'a')
str_detect(fruits, '^a')
str_detect(fruits, 'e$')
str_detect(fruits, '^[aA]')
str_detect(fruits, '[aA]')
str_detect(fruits, regex('a',ignore.case = T))
fruits
str_count(fruits, 'a')
str_c("apple", "banana")
str_c("Fruits: ", fruits)
str_c(Fruits, "name is", fruits)
str_c(fruits, "name is", fruits)
str_c(fruits, collapse="")
str_c(fruits, collapse=", ")
str_dup(fruits, 3)
str_length('apple')
str_length(fruits)
str_length('과일')
str_locate('apple', 'a')
str_locate(fruits, 'a')
str_locate('apple', 'app')
str_replace('apple', 'p', '*')
str_replace('apple', 'p', '++')
str_replace_all('apple', 'p', '*')
fruits <- str_c('apple','/','orange','/','banana')
fruits
str_split(fruits, "/")
str_sub(fruits, start = 1, end = 3)
str_sub(fruits, start = 6, end = 9)
str_sub(fruits, start = 7)
str_sub(fruits, start = -5)
str_trim(' apple banana berry ')
str_trim('\t apple banana berry ')
str_trim(' apple banana berry \n apple banana berry')
str_trim(' apple banana berry \n')
library(googleVis)
fruits
library(dplyr)
f2 <- filter(Fruits, Expenses>80)
f2
Fruits %>%
filter(Expenses>80)
Fruits %>%
filter(Expenses>80)
Fruits %>%
group_by(Fruit) %>%
mutate(sumSales = sum(Sales))
library(ggplot2)
View(mpg)
library(dplyr)
mpg %>%
select(manufacturer %in% c('audi','toyota'))
library(ggplot2)
View(mpg)
library(dplyr)
mpg %>%
select(manufacturer %in% c('audi','toyota'))
mpg %>%
filter(manufacturer %in% c('audi','toyota'))
mpg %>%
filter(manufacturer %in% c('audi','toyota')) %>%
group_by(manufacturer) %>%
summarise(고속도로연비평균 = mean(hwy))
mpg %>%
filter(manufacturer %in% c('chevrolet','ford','honda')) %>%
group_by(manufacturer) %>%
summarise(city = mean(cty))
mpg %>%
select(drv,cty,hwy) %>%
mutate((cty+hwy)/2)
mpg %>%
select(cyl,cty,hwy) %>%
mutate((cty + hwy)/2) %>%
arrange(desc(평균속도))
mpg %>%
select(cyl,cty,hwy) %>%
mutate((cty + hwy)/2) %>%
arrange(desc((cty + hwy)/2))
mpg %>%
mutate(avg_spd = (cty + hwy) / 2) %>%
group_by(class) %>%
summarise(class별평균속도 = mean(avg_spd)) %>%
arrange(desc(class별평균속도)) %>%
head(5)
mpg %>%
mutate(avg_spd = (cty + hwy) / 2) %>%
select(manufacturer, class, cty, hwy, avg_spd) %>%
head(5)
mtcars
mtcars %>%
mutate(mpg_per_disp = (mpg / disp)) %>%
arrange(desc(mpg_per_disp)) %>%
head(5)
mtcars %>%
group_by(cyl) %>%
summarise(avarage = mean(hp)) %>%
arrange(desc(avg_hp))
mtcars %>%
group_by(cyl) %>%
summarise(avg_hp = mean(hp)) %>%
arrange(desc(avg_hp))
mtcars %>%
group_by(cyl) %>%
summarise_each(list(mean), disp, hp)
mtcars %>%
group_by(cyl) %>%
summarise_each(funs(mean, n()), disp, hp)
iris
iris %>%
group_by(Species) %>%
summarise_each(list(mean), Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)
mtcars %>%
mutate(mpg_per_disp = (mpg / disp)) %>%
arrange(desc(mpg_per_disp)) %>%
head(5)
