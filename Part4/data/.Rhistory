install.packages("qqplot2")
library(qqplot2)
install.packages("qqplot2")
install.packages("qqplot2")
install.packages("qqplot2")
install.packages("qqplot2")
install.packages("qqplot2")
install.packages("ggplot2")
library(ggplot2)
korean <- read.table("학생별국어성적_new.txt", header = T, sep=",")
korean
gglot(korean, aes(x=이름, y=점수)) + geom_point()
ggplot(korean, aes(x=이름, y=점수)) + geom_point()
ggplot(korean, aes(x=이름, y=점수), data=korean) + geom_point()
ggplot(mapping=aes(x=이름, y=점수), data=korean) + geom_point()
ggplot(korean, aes(x=이름, y=점수)) + geom_bar(stat = "identity")
ggplot(korean, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "green", colour = "red")
ggplot(korean, aes(x=이름, y=점수)) + geom_bar(stat = "identity", fill = "green", colour = "red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "blue", size = 8))
score_kem <- read.csv("학생별과목별성적_국영수_new.csv", header = T)
score_kem
library(dplyr)
sort_kem <- arrange(score_kem, 이름, 과목)
sort_kem
sort_kem2
sort_kem2 <- ddply(sort_kem,"이름",transform,누적합계=cumsum(점수))
sort_kem2 <- sort_kem %>%
group_by(이름) %>%
mutate(누적합계=cumsum(점수))
sort_kem2
sort_kem3 <- ddply(sort_kem2,"이름",transform,누적합계=cumsum(점수),label=cumsum(점수)-0.5*점수)
sort_kem3 <- sort_kem2 %>%
group_by(이름) %>%
mutate(label=cumsum(점수)-0.5*점수)
sort_kem3
sort_kem4 <- sort_kem %>%
group_by(이름) %>%
mutate(누적합계=cumsum(점수)) %>%
mutate(label=cumsum(점수)-0.5*점수)
sort_kem4
sort_kem5 <- sort_kem %>%
group_by(이름) %>%
mutate(누적합계=cumsum(점수), label=cumsum(점수)-0.5*점수)
sort_kem5
ggplot(sort_kem3, aes(x=이름, y=점수, fill=과목)) + geom_bar(stat = "identity") +
geom_text(aes(y=label, label=paste(점수,'점')), colour = "black", size = 4))
ggplot(sort_kem3, aes(x=이름, y=점수, fill=과목)) + geom_bar(stat = "identity") +
geom_text(aes(y=label, label=paste(점수,'점')), colour = "black", size = 4) + guides(fill=guide_legend(reverse = T)) +
theme(axis.text.x=element_text(angle=45, hjust = 1, vjust = 1, colour = "black", size = 8))
score <- read.table("학생별전체성적_new.txt", header = T, sep = ",")
score
score_eng <- score[, c('이름','영어')]
ggplot(score, aes(x=영어, y=reorder(이름, 영어))) +
geom_point(size=4) +
theme_classic() +
theme(panel.grid.major.x = element_blank( ),
panel.grid.minor.x = element_blank( ),
panel.grid.major.y = element_line(color = "red",
linetype = "dashed"))
ggplot(score, aes(x=영어, y=reorder(이름,영어))) +
geom_segment(aes(yend=이름), xend=0, color="blue") +
theme_bw() +
theme(panel.grid.major.y = element_blank( ))
ggplot(score, aes(x=영어, y=reorder(이름,영어))) +
geom_segment(aes(yend=이름), xend=0, color="blue") +
geom_point(size=6, color="green") +
theme_bw() +
theme(panel.grid.major.y = element_blank( ))
install.packages("gridExtra")
library(gridExtra)
mtcars
str(mtcars)
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point()
ggplot(mtcars, aes(x=hp, y=disp)) +
geom_point()
ggplot(mtcars, aes(x=hp, y=disp)) +
geom_point(colour="blue")
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(color=factor(am), size=5))
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(color=factor(am), size=wt))
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(shape=factor(am), size=wt))
geom_point(aes(shape=factor(am), size=factor(wt))
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(shape=factor(am), color=wt))
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(shape=factor(am), color=wt))
# 종류별로 크기, 모양, 색상 지정하기
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(shape=factor(am), color=factor(am), size = wt)) +
scale_color_manual(values = c("red","green"))
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(color = 'red') +
geom_line(colour = 'blue')
labs(x="마력", y="연비(mile/gallon)")
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(shape=factor(am), color=factor(am), size = wt)) +
scale_color_manual(values = c("red","green")) +
labs(x="마력", y="연비(mile/gallon)")
par(oma = c(2, 1, 2, 1))
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(aes(shape=factor(am), color=factor(am), size = wt)) +
scale_color_manual(values = c("red","green")) +
labs(x="마력", y="연비(mile/gallon)")
three <- read.csv("학생별과목별성적_3기_3명.csv")
three
ggplot(sort_score, aes(x=과목, y=점수), color=이름, group=이름) +
geom_line()
sort_score <- arrange(three, 이름, 과목)
ggplot(sort_score, aes(x=과목, y=점수), color=이름, group=이름) +
geom_line()
sort_score <- arrange(three, 이름, 과목)
ggplot(sort_score, aes(x=과목, y=점수, color=이름, group=이름)) +
geom_line()
ggplot(sort_score, aes(x=과목, y=점수, color=이름, group=이름)) +
geom_line() +
geom_point(size=3)
ggplot(sort_score, aes(x=과목, y=점수, color=이름, group=이름)) +
geom_line() +
geom_point(size=3, shape=22)
ggplot(sort_score, aes(x=과목, y=점수, color=이름, group=이름, fill=이름)) +
geom_line() +
geom_point(size=3, shape=22)
ggplot(sort_score, aes(x=과목, y=점수, color=이름, group=이름, fill=이름)) +
geom_line() +
geom_point(size=3) +
ggtitle("학생별 과목별 성적")
dis <- read.csv("1군전염병발병현황_년도별.csv", stringsAsFactors=F)
str(dis)
ggplot(dis, aes(x=년도별, y=장티푸스, group=1)) + geom_line()
ggplot(dis, aes(x=년도별, y=장티푸스, group=1)) + geom_area()
ggplot(dis, aes(x=년도별, y=장티푸스, group=1)) + geom_area(color="red", fill="cyan", alpha=04)
ggplot(dis, aes(x=년도별, y=장티푸스, group=1)) + geom_area(color="red", fill="cyan", alpha=0.4)
ggplot(dis, aes(x=년도별, y=장티푸스, group=1)) + geom_area(fill="cyan", alpha=0.4) + geom_line(color='blue')
# Anscombe's Quartet
# 기술통계량(평균(x), 평균(y), 분산(x), 분산(y), 상관계수, 회귀식)이 동일한 4개의 데이터 셋
anscombe
str(anscombe)
ans_x_mean <- anscome %>%
select(x1,x2,x3,x4) %>%
summarise_each(list(mean), x1, x2, x3, x4)
ans_x_mean <- anscombe %>%
select(x1,x2,x3,x4) %>%
summarise_each(list(mean), x1, x2, x3, x4)
ans_x_mean
ans_y_mean <- anscombe %>%
select(y1,y2,y3,y4) %>%
summarise_each(list(mean), y1, y2, y3, y4)
ans_y_mean
ans_x_mean <- anscombe %>%
select(x1,x2,x3,x4) %>%
summarise_each(list(var), x1, x2, x3, x4)
ans_x_mean
ans_y_mean <- anscombe %>%
select(y1,y2,y3,y4) %>%
summarise_each(list(var), y1, y2, y3, y4)
ans_y_mean
ans_x_var <- anscombe %>%
select(x1,x2,x3,x4) %>%
summarise_each(list(var), x1, x2, x3, x4)
ans_x_var
ans_y_var <- anscombe %>%
select(y1,y2,y3,y4) %>%
summarise_each(list(var), y1, y2, y3, y4)
ans_y_var
knitr::opts_chunk$set(echo = TRUE)
anscombe
anscombe
```{r}
library(ggplot2)
View mpg
View(mpg)
library(ggplot2)
library(gridExtra)
mpg
ggplot(mpg, aes(x=cty, y=hwy) + geom_point())
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point()
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(aes(shape=factor(am), color=factor(am), size = wt)) +
scale_color_manual(values = c("red","green"))
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(aes(color=factor(am)))
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point()
mtcars
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(aes(color=factor(cty, hwy)))
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(aes(color=factor(cty)))
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(colour="blue")
library(ggplot2)
library(gridExtra)
mpg
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(colour="blue")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(colour="blue")
midwest
midwest
View(midwest)
midwest
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point() + xlim(0:500000) +ylim(0:10000)
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point() + xlim(0,500000) + ylim(0,10000)
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point() + xlim(0,50000) + ylim(0,1000)
ggplot(mpg, aes(x=class)) + geom_bar("identity")
ggplot(mpg, aes(x=class)) + geom_bar()
View(economics)
ggplot(economics, aes(x=psavert, y=date)) + geom_line()
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(size=2, color='red')
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point() + xlim(0,50000) + ylim(0,1000)
ggplot(economics, aes(x=date, y=psavert)) + geom_line()
