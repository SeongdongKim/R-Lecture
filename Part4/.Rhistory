colors <- c(colors, 'red')
sizes <- c(sizes, 2)
} else {
colors <- c(colors, 'green')
sizes <- c(sizes, 6)
}
}
plot(g,layout=layout.fruchterman.reingold, vertex.size=sizes,
edge.arrow.size =0.5, vertex.color=colors, vertex.label=NA)
V(g)$name
gubun1 <- V(g)$name
gubun1
colors <- c()
sizes <- c()
for (i in 1:length(gubun)) {
if (gubun[i] == 'S') {
colors <- c(colors, 'red')
sizes <- c(sizes, 2)
} else {
colors <- c(colors, 'green')
sizes <- c(sizes, 6)
}
}
V(g)$name
gubun1 <- V(g)$name
gubun1
colors <- c()
sizes <- c()
for (i in 1:length(gubun)) {
if (gubun[i] == 'S') {
colors <- c(colors, 'red')
sizes <- c(sizes, 2)
} else {
colors <- c(colors, 'green')
sizes <- c(sizes, 6)
}
}
plot(g,layout=layout.fruchterman.reingold, vertex.size=sizes,
edge.arrow.size =0.5, vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold, vertex.size=sizes,
edge.arrow.size =0.5, vertex.color=colors, vertex.label=NA)
library(devtools)
library(d3Network)
library(RCurl)
g <- read.csv("data/군집분석.csv", head = T)
plot(g, layout=layout.kamada.kawai, vertex.size=2,
edge.arrow.size=0.5, vertex.label=NA)
V(g)$name
gubun1 <- V(g)$name
gubun1
colors <- c()
sizes <- c()
for (i in 1:length(gubun)) {
if (gubun[i] == 'S') {
colors <- c(colors, 'red')
sizes <- c(sizes, 2)
} else {
colors <- c(colors, 'green')
sizes <- c(sizes, 6)
}
}
plot(g,layout=layout.fruchterman.reingold, vertex.size=sizes,
edge.arrow.size =0.5, vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold, vertex.size=sizes,
edge.arrow.size =0.5, vertex.color=colors, vertex.label=NA)
g <- read.csv("data/군집분석.csv", head = T)
graph1 <- data.frame(학생=g$학생, 교수=g$교수)
g <- graph.data.frame(graph1,directed = T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,
edge.arrow.size=0.5,vertex.color="green",vertex.label=NA)
g <- read.csv("군집분석.csv", head = T)
graph1 <- data.frame(학생=g$학생, 교수=g$교수)
g <- graph.data.frame(graph1,directed = T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,
edge.arrow.size=0.5,vertex.color="green",vertex.label=NA)
g <- read.csv("군집분석.csv", head = T)
graph <- data.frame(학생=g$학생, 교수=g$교수)
g <- graph.data.frame(graph,directed = T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,
edge.arrow.size=0.5,vertex.color="green",vertex.label=NA)
install.packages('treemap')
library(treemap)
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
treemap(total, vSize = "점수", index=C("점수","이름"))
library(treemap)
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
library(treemap)
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize = "점수", index=C("점수","이름"))
treemap(total, vSize = "점수", index=C("조","이름"))
treemap(total, vSize = "점수", index=C("점수","조","이름"))
library(treemap)
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
library(treemap)
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
library(devtools)
library(d3Network)
library(RCurl)
library(treemap)
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름")
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름")
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize="점수", index=C("점수","이름"))
treemap(total, vSize="점수", index=C("조","이름"))
treemap(total, vSize="점수", index=C("점수","조","이름")
install.packages("treemap")
install.packages("treemap")
install.packages("treemap")
library(treemap)
total <- read.table("data/학생별전체성적_new.txt", header=T, sep=",")
total
row.names(total)<- total$이름
total <- read.table("data/학생별전체성적_new.txt", header=T, sep=",")
total
row.names(total)<- total$이름
row.names(total)<- total$이름
total
total<- total[,2:7]
total
stars(total, flip.labels = FALSE, draw.segments = FALSE,frame.plot = TRUE,full=TRUE,
main= "학생별 과목별 성적분석-STAR Chart")
value <- table(lab)
value
lab <- names(total)
value <- table(lab)
lab <- names(total)
value <- table(lab)
value
pie(value,labels=lab,radius=0.1,cex=0.6,col=NA)
# 나이팅게일 차트
stars(total, flip.labels = FALSE, draw.segments = TRUE, frame.plot = TRUE,
full=TRUE, main="학생별 과목별 성적분석=나이팅게일 챠트")
pie(value,labels = labed,col=color,radius = 0.1,cex=0.6)
pie(value,labels = labed,col=color,radius = 0.1,cex=0.6)
label <- names(total)
value <- table(label)
color <- c("black","red","green","blue","cyan","violet")
pie(value,labels = labed,col=color,radius = 0.1,cex=0.6)
stars(total, flip.labels = FALSE, draw.segments = TRUE, frame.plot = TRUE,
full=TRUE, main="학생별 과목별 성적분석=나이팅게일 챠트")
label <- names(total)
value <- table(label)
color <- c("black","red","green","blue","cyan","violet")
pie(value,labels = label,col=color,radius = 0.1,cex=0.6)
install.packages("fmsb")
library(fmsb)
set.seed(123)
layout <- data.frame(
분석력=c(5,1),
창의력=c(15,3),
판단력=c(3,0),
리더십=c(5,1),
사교성=c(5,1))
set.seed(123)
data1 <- data.frame(
분석력=runif(3,1,5),
창의력=rnorm(3,10,2),
판단력=c(0.5,NA,3),
리더십=runif(3,1,5),
사교성=c(5,2.5,4))
stars(total,flip.labels = FALSE,draw.segment=TRUE,frame.plot = TRUE, full = FALSE, main= "학생별 과목별 분석 다이어그램-반원챠트")
runif(10)
runif(10, 2, 5)
rnorm(10)
rnorm(10, 5, 2)
data2 <- rbind(layout, data1)
op <- par(mar=c(1, 0.5, 3, 1), mfrow=c(2,2))
radarchart(data2, axistype = 1, seg = 5, plty = 1, title = "첫번째 타입")
radarchart(data2, axistype = 2, pcol=topo.colors(3), plty = 1, title = "두번째 타입")
radarchart(data2, axistype = 3, pty=32, plty = 1, axislabcol = "grey", na.itp = FALSE title = "세번째 타입")
radarchart(data2, axistype = 0, plwd = 1:5, pcol = 1, title = "네번째 타입")
data2 <- rbind(layout, data1)
op <- par(mar=c(1, 0.5, 3, 1), mfrow=c(2,2))
radarchart(data2, axistype = 1, seg = 5, plty = 1, title = "첫번째 타입")
radarchart(data2, axistype = 2, pcol=topo.colors(3), plty = 1, title = "두번째 타입")
radarchart(data2, axistype = 3, pty=32, plty = 1, axislabcol = "grey", na.itp = FALSE, title = "세번째 타입")
radarchart(data2, axistype = 0, plwd = 1:5, pcol = 1, title = "네번째 타입")
par(mar=c(0, 0, 0, 0), mfrow=c(1, 1))
par(mar=c(0, 0, 0, 0), mfrow=c(1, 1))
total <- read.csv("학생시험결과_전체점수.csv", header = T, sep=",")
total
library(treemap)
total <- read.csv("학생시험결과_전체점수.csv", header = T, sep=",")
# 저수준 작도 함수
var1 <- 1:5
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(2,4,"labels")
var1 <- 1:5
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(2,4,"labels")
text(3,2,"테스트",srt=45)
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEXT", "SUB")
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEXT", "SUB")
title("THIS IS TEST", "SUB")
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEST", "SUB")
library(treemap)
total <- read.csv("학생시험결과_전체점수.csv",header=T,sep",")
total <- read.csv(data/"학생시험결과_전체점수.csv",header=T,sep",")
data2 <- rbind(layout, data1)
op <- par(mar=c(1, 0.5, 3, 1), mfrow=c(2,2))
radarchart(data2, axistype = 1, seg = 5, plty = 1, title = "첫번째 타입")
radarchart(data2, axistype = 2, pcol=topo.colors(3), plty = 1, title = "두번째 타입")
radarchart(data2, axistype = 3, pty=32, plty = 1, axislabcol = "grey", na.itp = FALSE, title = "세번째 타입")
radarchart(data2, axistype = 0, plwd = 1:5, pcol = 1, title = "네번째 타입")
par(mar=c(0, 0, 0, 0), mfrow=c(1, 1))
var1 <- 1:5
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(2,4,"labels")
text(3,2,"테스트",srt=45)
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEST", "SUB")
iris
iris
iris
View(iris)
sum <- 0
for (i in seq(3, 100, 3)) {
sum <- sum + i
}
print(sum)
for(i in c(1,3,5,7,9)) {
print(i)
}
